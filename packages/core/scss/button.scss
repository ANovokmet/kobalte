@use "common/functions" as *;
@use "common/mixins" as *;
@use "common/variables" as *;

$colorMap: (
  primary: primary,
  secondary: neutral,
  danger: danger,
);

// -------------------------------------------------------------------------------------------------
// base
// -------------------------------------------------------------------------------------------------

.kb-button {
  appearance: none;
  position: relative;

  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: 8px;

  width: auto;

  outline: none;

  border: 1px solid transparent;
  border-radius: $kb-button-border-radius;

  padding: 0;

  font-family: inherit;
  font-size: 100%;
  font-weight: $kb-button-font-weight;
  line-height: 1;
  text-decoration: none;

  user-select: none;
  white-space: nowrap;
  vertical-align: middle;

  transition-property: color, background-color, border-color;
  transition-duration: 250ms;

  &[data-loading] {
    opacity: 0.8;
  }

  @include focus-visible;

  &:disabled {
    cursor: not-allowed;
  }
}

.kb-button--full-width {
  display: flex;
  width: 100%;
}

// -------------------------------------------------------------------------------------------------
// variant - default
// -------------------------------------------------------------------------------------------------

.kb-button--default {
  border-color: $kb-button-default-border-color;
  background-color: $kb-button-default-background-color;
  color: $kb-button-default-color;

  &:hover {
    border-color: $kb-button-default-hover-border-color;
    background-color: $kb-button-default-hover-background-color;
    color: $kb-button-default-hover-color;
  }

  &:active {
    border-color: $kb-button-default-active-border-color;
    background-color: $kb-button-default-active-background-color;
    color: $kb-button-default-active-color;
  }

  &:disabled {
    border-color: $kb-button-default-disabled-border-color;
    background-color: $kb-button-default-disabled-background-color;
    color: $kb-button-default-disabled-color;
  }

  #{dark-selector()} {
    border-color: $kb-button-default-dark-border-color;
    background-color: $kb-button-default-dark-background-color;
    color: $kb-button-default-dark-color;
  }

  #{dark-selector("&:hover")} {
    border-color: $kb-button-default-dark-hover-border-color;
    background-color: $kb-button-default-dark-hover-background-color;
    color: $kb-button-default-dark-hover-color;
  }

  #{dark-selector("&:active")} {
    border-color: $kb-button-default-dark-active-border-color;
    background-color: $kb-button-default-dark-active-background-color;
    color: $kb-button-default-dark-active-color;
  }

  #{dark-selector("&:disabled")} {
    border-color: $kb-button-default-dark-disabled-border-color;
    background-color: $kb-button-default-dark-disabled-background-color;
    color: $kb-button-default-dark-disabled-color;
  }
}

// -------------------------------------------------------------------------------------------------
// variant - solid
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--solid.kb-button--#{$name} {
    $baseShade: if($isNeutral, 800, 600);
    border-color: rgb(var(--kb-color-#{$color}-#{$baseShade}));
    background-color: rgb(var(--kb-color-#{$color}-#{$baseShade}));
    color: rgb(var(--kb-color-white));

    &:hover {
      $hoverShade: if($isNeutral, 700, 500);
      border-color: rgb(var(--kb-color-#{$color}-#{$hoverShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$hoverShade}));
    }

    &:active {
      $activeShade: if($isNeutral, 900, 700);
      border-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
    }

    &:disabled {
      border-color: rgb(var(--kb-color-#{$color}-200));
      background-color: rgb(var(--kb-color-#{$color}-200));
    }

    #{dark-selector()} {
      border-color: rgb(var(--kb-color-#{$color}-600));
      background-color: rgb(var(--kb-color-#{$color}-600));
    }

    #{dark-selector("&:hover")} {
      border-color: rgb(var(--kb-color-#{$color}-700));
      background-color: rgb(var(--kb-color-#{$color}-700));
    }

    #{dark-selector("&:active")} {
      border-color: rgb(var(--kb-color-#{$color}-500));
      background-color: rgb(var(--kb-color-#{$color}-500));
    }

    #{dark-selector("&:disabled")} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-#{$color}-600) / 0.3);
      color: rgb(var(--kb-color-white) / 0.3);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// variant - soft
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--soft.kb-button--#{$name} {
    border-color: rgb(var(--kb-color-#{$color}-100));
    background-color: rgb(var(--kb-color-#{$color}-100));
    color: rgb(var(--kb-color-#{$color}-#{if($isNeutral, 800, 700)}));

    &:hover {
      border-color: rgb(var(--kb-color-#{$color}-200));
      background-color: rgb(var(--kb-color-#{$color}-200));
    }

    &:active {
      border-color: rgb(var(--kb-color-#{$color}-300));
      background-color: rgb(var(--kb-color-#{$color}-300));
    }

    &:disabled {
      border-color: rgb(var(--kb-color-#{$color}-50));
      background-color: rgb(var(--kb-color-#{$color}-50));
      color: rgb(var(--kb-color-#{$color}-200));
    }

    #{dark-selector()} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-#{$color}-500) / 0.2);
      color: rgb(var(if($isNeutral, --kb-color-text-2, --kb-color-#{$color}-400)));
    }

    #{dark-selector("&:hover")} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-#{$color}-500) / 0.35);
    }

    #{dark-selector("&:active")} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-#{$color}-500) / 0.5);
    }

    #{dark-selector("&:disabled")} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-#{$color}-600) / 0.1);
      color: rgb(var(--kb-color-#{$color}-500) / 0.3);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// variant - outlined
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--outlined.kb-button--#{$name} {
    $shade: if($isNeutral, 700, 600);
    border-color: rgb(var(--kb-color-#{$color}-#{$shade}));
    background-color: transparent;
    color: rgb(var(--kb-color-#{$color}-#{$shade}));

    &:hover {
      background-color: rgb(var(--kb-color-fill-2));
    }

    &:active {
      background-color: rgb(var(--kb-color-fill-3) / 0.8);
    }

    &:disabled {
      border-color: rgb(var(--kb-color-#{$color}-200));
      background-color: transparent;
      color: rgb(var(--kb-color-#{$color}-200));
    }

    #{dark-selector()} {
      border-color: rgb(var(--kb-color-#{$color}-500));
      color: rgb(var(--kb-color-#{$color}-400));
    }

    #{dark-selector("&:active")} {
      background-color: rgb(var(--kb-color-fill-3));
    }

    #{dark-selector("&:disabled")} {
      border-color: rgb(var(--kb-color-#{$color}-600) / 0.3);
      color: rgb(var(--kb-color-#{$color}-600) / 0.4);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// variant - plain
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--plain.kb-button--#{$name} {
    border-color: transparent;
    background-color: transparent;
    color: rgb(var(--kb-color-#{$color}-#{if($isNeutral, 700, 600)}));

    &:hover {
      border-color: transparent;
      background-color: rgb(var(--kb-color-fill-2));
    }

    &:active {
      border-color: transparent;
      background-color: rgb(var(--kb-color-fill-3));
    }

    &:disabled {
      border-color: transparent;
      background-color: transparent;
      color: rgb(var(--kb-color-#{$color}-200));
    }

    #{dark-selector()} {
      color: rgb(var(--kb-color-#{$color}-400));
    }

    #{dark-selector("&:disabled")} {
      color: rgb(var(--kb-color-#{$color}-600) / 0.4);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// size
// -------------------------------------------------------------------------------------------------

.kb-button--xs {
  height: $kb-button-xs-height;
  padding: $kb-button-xs-padding;
  font-size: $kb-button-xs-font-size;

  &.kb-button--icon-only {
    width: $kb-button-xs-height;
    padding: 0;
  }
}

.kb-button--sm {
  height: $kb-button-sm-height;
  padding: $kb-button-sm-padding;
  font-size: $kb-button-sm-font-size;

  &.kb-button--icon-only {
    width: $kb-button-sm-height;
    padding: 0;
  }
}

.kb-button--md {
  height: $kb-button-md-height;
  padding: $kb-button-md-padding;
  font-size: $kb-button-md-font-size;

  &.kb-button--icon-only {
    width: $kb-button-md-height;
    padding: 0;
  }
}

.kb-button--lg {
  height: $kb-button-lg-height;
  padding: $kb-button-lg-padding;
  font-size: $kb-button-lg-font-size;

  &.kb-button--icon-only {
    width: $kb-button-lg-height;
    padding: 0;
  }
}

// -------------------------------------------------------------------------------------------------
// icon
// -------------------------------------------------------------------------------------------------

.kb-button__icon {
  display: inline-flex;
  align-self: center;
  flex-shrink: 0;
  font-size: 1.2em;
}

// -------------------------------------------------------------------------------------------------
// loader
// -------------------------------------------------------------------------------------------------

.kb-button__loader-wrapper {
  position: absolute;
  display: flex;
  align-items: center;
  flex-shrink: 0;
  font-size: 1em;
  line-height: normal;

  &.kb-button__loader-wrapper--has-loading-text {
    position: relative;
  }
}

.kb-button__loader-icon {
  font-size: 1.3em;
  animation: 1s linear infinite kb-animation-spin;
}

@use "utils/mixins" as *;
@use "utils/functions" as *;

$colorMap: (
  primary: primary,
  secondary: neutral,
  danger: danger,
);

// -------------------------------------------------------------------------------------------------
// base
// -------------------------------------------------------------------------------------------------

.kb-button {
  appearance: none;
  position: relative;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  width: auto;
  padding: 0;

  outline: none;
  border: 1px solid transparent;
  border-radius: 4px;

  font-family: inherit;
  font-size: 100%;
  font-weight: 400;
  line-height: 1;
  text-decoration: none;

  user-select: none;
  white-space: nowrap;
  vertical-align: middle;

  transition-property: color, background-color, border-color, box-shadow;
  transition-duration: 250ms;

  &[data-loading] {
    opacity: 0.8;
  }

  @include focus-visible;

  &:disabled {
    cursor: not-allowed;
  }
}

.kb-button--full-width {
  display: flex;
  width: 100%;
}

// -------------------------------------------------------------------------------------------------
// variant - solid
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--solid.kb-button--#{$name} {
    $baseShade: if($isNeutral, 800, 600);
    border-color: rgb(var(--kb-color-#{$color}-#{$baseShade}));
    background-color: rgb(var(--kb-color-#{$color}-#{$baseShade}));
    color: rgb(var(--kb-color-white));

    &:hover {
      border-color: rgb(var(--kb-color-#{$color}-700));
      background-color: rgb(var(--kb-color-#{$color}-700));
    }

    &:active {
      $activeShade: if($isNeutral, 600, 800);
      border-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
    }

    &:disabled {
      border-color: rgb(var(--kb-color-neutral-100));
      background-color: rgb(var(--kb-color-neutral-100));
      color: rgb(var(--kb-color-neutral-300));
    }

    #{dark-selector()} {
      border-color: rgb(var(--kb-color-#{$color}-600));
      background-color: rgb(var(--kb-color-#{$color}-600));
    }

    #{dark-selector("&:hover")} {
      border-color: rgb(var(--kb-color-#{$color}-500));
      background-color: rgb(var(--kb-color-#{$color}-500));
    }

    #{dark-selector("&:active")} {
      border-color: rgb(var(--kb-color-#{$color}-700));
      background-color: rgb(var(--kb-color-#{$color}-700));
    }

    #{dark-selector("&:disabled")} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-neutral-700) / 0.3);
      color: rgb(var(--kb-color-white) / 0.1);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// variant - soft
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--soft.kb-button--#{$name} {
    border-color: rgb(var(--kb-color-#{$color}-100));
    background-color: rgb(var(--kb-color-#{$color}-100));
    color: rgb(var(--kb-color-#{$color}-#{if($isNeutral, 800, 700)}));

    &:hover {
      $hoverShade: if($isNeutral, 800, 600);
      border-color: rgb(var(--kb-color-#{$color}-#{$hoverShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$hoverShade}));
      color: rgb(var(--kb-color-white));
    }

    &:active {
      $activeShade: if($isNeutral, 600, 800);
      border-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
      color: rgb(var(--kb-color-white));
    }

    &:disabled {
      border-color: rgb(var(--kb-color-neutral-100));
      background-color: rgb(var(--kb-color-neutral-100));
      color: rgb(var(--kb-color-neutral-300));
    }

    #{dark-selector()} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-#{$color}-500) / 0.2);
      color: rgb(var(if($isNeutral, --kb-color-text-2, --kb-color-#{$color}-400)));
    }

    #{dark-selector("&:hover")} {
      border-color: rgb(var(--kb-color-#{$color}-600));
      background-color: rgb(var(--kb-color-#{$color}-600));
      color: rgb(var(--kb-color-white));
    }

    #{dark-selector("&:active")} {
      border-color: rgb(var(--kb-color-#{$color}-700));
      background-color: rgb(var(--kb-color-#{$color}-700));
      color: rgb(var(--kb-color-white));
    }

    #{dark-selector("&:disabled")} {
      border-color: transparent;
      background-color: rgb(var(--kb-color-neutral-700) / 0.3);
      color: rgb(var(--kb-color-white) / 0.1);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// variant - outlined
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--outlined.kb-button--#{$name} {
    $shade: if($isNeutral, 700, 600);
    border-color: rgb(var(--kb-color-#{$color}-#{$shade}));
    background-color: transparent;
    color: rgb(var(--kb-color-#{$color}-#{$shade}));

    &:hover {
      $hoverShade: if($isNeutral, 800, 600);
      border-color: rgb(var(--kb-color-#{$color}-#{$hoverShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$hoverShade}));
      color: rgb(var(--kb-color-white));
    }

    &:active {
      $activeShade: if($isNeutral, 600, 800);
      border-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
      background-color: rgb(var(--kb-color-#{$color}-#{$activeShade}));
      color: rgb(var(--kb-color-white));
    }

    &:disabled {
      border-color: rgb(var(--kb-color-neutral-200));
      background-color: transparent;
      color: rgb(var(--kb-color-neutral-300));
    }

    #{dark-selector()} {
      border-color: rgb(var(--kb-color-#{$color}-500));
      color: rgb(var(--kb-color-#{$color}-400));
    }

    #{dark-selector("&:hover")} {
      border-color: rgb(var(--kb-color-#{$color}-600));
      background-color: rgb(var(--kb-color-#{$color}-600));
      color: rgb(var(--kb-color-white));
    }

    #{dark-selector("&:active")} {
      border-color: rgb(var(--kb-color-#{$color}-700));
      background-color: rgb(var(--kb-color-#{$color}-700));
      color: rgb(var(--kb-color-white));
    }

    #{dark-selector("&:disabled")} {
      border-color: rgb(var(--kb-color-neutral-700) / 0.4);
      background-color: transparent;
      color: rgb(var(--kb-color-white) / 0.1);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// variant - plain
// -------------------------------------------------------------------------------------------------

@each $name, $color in $colorMap {
  $isNeutral: $color == neutral;

  .kb-button--plain.kb-button--#{$name} {
    border-color: transparent;
    background-color: transparent;
    color: rgb(var(--kb-color-#{$color}-#{if($isNeutral, 700, 600)}));

    &:hover {
      border-color: transparent;
      background-color: rgb(var(--kb-color-fill-2));
    }

    &:active {
      border-color: transparent;
      background-color: rgb(var(--kb-color-fill-3));
    }

    &:disabled {
      border-color: transparent;
      background-color: transparent;
      color: rgb(var(--kb-color-neutral-300));
    }

    #{dark-selector()} {
      color: rgb(var(if($isNeutral, --kb-color-text-2, --kb-color-#{$color}-400)));
    }

    #{dark-selector("&:disabled")} {
      color: rgb(var(--kb-color-white) / 0.1);
    }
  }
}

// -------------------------------------------------------------------------------------------------
// size
// -------------------------------------------------------------------------------------------------

.kb-button--xs {
  min-width: 64px;
  height: 28px;
  gap: 6px;
  padding: 0 12px;
  font-size: 14px;

  &.kb-button--icon-only {
    min-width: 28px;
    width: 28px;
    padding: 0;
    font-size: 16px;
  }

  &.kb-button--has-left-icon {
    padding: 0 12px 0 10px;
  }

  &.kb-button--has-right-icon {
    padding: 0 10px 0 12px;
  }

  .kb-button__icon,
  .kb-button__loader-wrapper {
    font-size: 16px;
  }
}

.kb-button--sm {
  min-width: 72px;
  height: 32px;
  gap: 6px;
  padding: 0 14px;
  font-size: 14px;

  &.kb-button--icon-only {
    min-width: 32px;
    width: 32px;
    padding: 0;
    font-size: 16px;
  }

  &.kb-button--has-left-icon {
    padding: 0 14px 0 12px;
  }

  &.kb-button--has-right-icon {
    padding: 0 12px 0 14px;
  }

  .kb-button__icon,
  .kb-button__loader-wrapper {
    font-size: 16px;
  }
}

.kb-button--md {
  min-width: 88px;
  height: 40px;
  gap: 8px;
  padding: 0 16px;
  font-size: 14px;

  &.kb-button--icon-only {
    min-width: 40px;
    width: 40px;
    padding: 0;
    font-size: 16px;
  }

  &.kb-button--has-left-icon {
    padding: 0 16px 0 14px;
  }

  &.kb-button--has-right-icon {
    padding: 0 14px 0 16px;
  }

  .kb-button__icon,
  .kb-button__loader-wrapper {
    font-size: 16px;
  }
}

.kb-button--lg {
  min-width: 104px;
  height: 48px;
  gap: 10px;
  padding: 0 18px;
  font-size: 14px;

  &.kb-button--icon-only {
    min-width: 48px;
    width: 48px;
    padding: 0;
    font-size: 16px;
  }

  &.kb-button--has-left-icon {
    padding: 0 18px 0 16px;
  }

  &.kb-button--has-right-icon {
    padding: 0 16px 0 18px;
  }

  .kb-button__icon,
  .kb-button__loader-wrapper {
    font-size: 16px;
  }
}

// -------------------------------------------------------------------------------------------------
// icon
// -------------------------------------------------------------------------------------------------

.kb-button__icon {
  display: inline-flex;
  align-self: center;
  flex-shrink: 0;
}

// -------------------------------------------------------------------------------------------------
// loader
// -------------------------------------------------------------------------------------------------

.kb-button__loader-wrapper {
  position: absolute;
  display: flex;
  align-items: center;
  flex-shrink: 0;
  line-height: normal;

  &.kb-button__loader-wrapper--has-loading-text {
    position: relative;
  }
}

.kb-button__loader-icon {
  animation: 1s linear infinite kb-animation-spin;
}
